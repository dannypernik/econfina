"""user, test_date, user_test_date tables

Revision ID: 424c302a9645
Revises: 
Create Date: 2022-09-28 19:47:05.064289

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '424c302a9645'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('test_date',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=True),
    sa.Column('test', sa.String(length=24), nullable=True),
    sa.Column('status', sa.String(length=24), nullable=True),
    sa.Column('reg_date', sa.Date(), nullable=True),
    sa.Column('late_date', sa.Date(), nullable=True),
    sa.Column('other_date', sa.Date(), nullable=True),
    sa.Column('score_date', sa.Date(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(length=32), nullable=True),
    sa.Column('last_name', sa.String(length=32), nullable=True),
    sa.Column('email', sa.String(length=64), nullable=True),
    sa.Column('phone', sa.String(length=32), nullable=True),
    sa.Column('password_hash', sa.String(length=128), nullable=True),
    sa.Column('timezone', sa.Integer(), nullable=True),
    sa.Column('location', sa.String(length=128), nullable=True),
    sa.Column('status', sa.String(length=24), nullable=True),
    sa.Column('tutor_id', sa.Integer(), nullable=True),
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('last_viewed', sa.DateTime(), nullable=True),
    sa.Column('role', sa.String(length=24), nullable=True),
    sa.Column('is_admin', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['parent_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['tutor_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_user_email'), ['email'], unique=False)
        batch_op.create_index(batch_op.f('ix_user_first_name'), ['first_name'], unique=False)
        batch_op.create_index(batch_op.f('ix_user_last_name'), ['last_name'], unique=False)
        batch_op.create_index(batch_op.f('ix_user_phone'), ['phone'], unique=False)
        batch_op.create_index(batch_op.f('ix_user_role'), ['role'], unique=False)
        batch_op.create_index(batch_op.f('ix_user_status'), ['status'], unique=False)

    op.create_table('user_test_date',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('test_date_id', sa.Integer(), nullable=False),
    sa.Column('is_registered', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['test_date_id'], ['test_date.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'test_date_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_test_date')
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_status'))
        batch_op.drop_index(batch_op.f('ix_user_role'))
        batch_op.drop_index(batch_op.f('ix_user_phone'))
        batch_op.drop_index(batch_op.f('ix_user_last_name'))
        batch_op.drop_index(batch_op.f('ix_user_first_name'))
        batch_op.drop_index(batch_op.f('ix_user_email'))

    op.drop_table('user')
    op.drop_table('test_date')
    # ### end Alembic commands ###
